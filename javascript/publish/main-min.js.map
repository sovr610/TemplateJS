{"version":3,"sources":["app.js"],"names":["helmet","require","compression","express","path","pino","port","app","use","static","join","__dirname","get","async","req","res","next","json","success","e","log","error","listen","console","module","exports"],"mappings":"AAAA,IAAIA,OAASC,QAAQ,UAEjBC,YAAcD,QAAQ,eAEtBE,QAAUF,QAAQ,WAElBG,KAAOH,QAAQ,QAEfI,KAAOJ,QAAQ,sBAARA,GAEPK,KAAO,IACPC,IAAM,IAAIJ,QAEdI,IAAIC,IAAIR,UAERO,IAAIC,IAAIH,MAERE,IAAIC,IAAIL,QAAQM,OAAOL,KAAKM,KAAKC,UAAW,YAE5CJ,IAAIK,IAAI,IAAKC,eAAgBC,EAAKC,EAAKC,GACrC,IACED,EAAIE,KAAK,CACPC,SAAS,IAEX,MAAOC,GACPL,EAAIM,IAAIC,MAAMF,GACdH,EAAKG,MAITZ,IAAIe,OAAOhB,KAAM,IAAMiB,QAAQH,IAAI,kCAAmCd,OACtEkB,OAAOC,QAAUlB","sourcesContent":["var helmet = require('helmet');\nvar compression = require('compression');\nvar express = require('express');\nvar path = require('path');\nvar pino = require('express-pino-logger')();\n\nvar port = 3000;\nvar app = new express();\n\n//app.use(compression()); // compressed responses for faster responses from the endpoints.\napp.use(helmet()); // For basic protection of the server.\napp.use(pino); // For fast, detailed and color orientated output to the console.\n\napp.use(express.static(path.join(__dirname, 'public')));\n\n// Example endpoint with basic error handling\napp.get('/', async function (req, res, next) {\n  try {\n    res.json({ success: true });\n    //Do stuff\n  } catch (e) {\n    req.log.error(e);\n    next(e);\n  }\n});\n\n// Start the server listening on the assigned port number.\napp.listen(port, () => console.log('Example app listening on port: ', port));\nmodule.exports = app;\n"],"file":"main-min.js"}